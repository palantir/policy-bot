name: Build

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  verify:
    runs-on: ubuntu-latest

    env:
      GOPATH: /home/runner/go

    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Cache Godel assets
      uses: actions/cache@v2
      with:
        path: ~/.godel
        key: ${{ runer.os }}-godel-${{ hashFiles('godelw') }}-${{ hashFiles('godel/config/godel.yml') }}
        restore-keys: |
          ${{ runer.os }}-godel-

    - name: Verify
      run: ./godelw verify --apply=false

  build-and-publish:
    runs-on: ubuntu-latest

    env:
      GOPATH: /home/runner/go

    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Cache Godel assets
      uses: actions/cache@v2
      with:
        path: ~/.godel
        key: ${{ runer.os }}-godel-${{ hashFiles('godelw') }}-${{ hashFiles('godel/config/godel.yml') }}
        restore-keys: |
          ${{ runer.os }}-godel-

    - name: Set up Node
      uses: actions/setup-node@v2
      with:
        node-version: 12

    - name: Cache node_modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runer.os }}-node-modules-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runer.os }}-node-modules-

    - name: Install frontend dependencies
      run: yarn install

    - name: Build frontend
      run: yarn run build:production

    - name: Build distribution
      run: ./godelw dist

    - name: Build Docker image
      run: ./godelw docker build --verbose
