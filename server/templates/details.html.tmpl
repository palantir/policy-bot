{{/* templatetree:extends page.html.tmpl */}}
{{define "title"}}{{.PullRequest.GetBase.GetRepo.GetFullName}}#{{.PullRequest.GetNumber}} - Details | PolicyBot{{end}}

{{define "scripts"}}
<script defer src="{{ resource "js/htmx.js" }}"></script>
<script defer src="{{ resource "js/main.js" }}"></script>
{{end}}

{{define "body-class"}}bg-light-gray5 text-dark-gray1 flex flex-col h-screen{{end}}
{{define "body"}}
  <header class="w-full tripart p-4 bg-white shadow-sm z-10 relative">
    <a href="{{.PolicyURL}}" title="View the policy definition on GitHub"
       class="px-2 py-1 text-xs text-dark-gray3 bg-light-gray3 border border-light-gray2 rounded-sm truncate max-w-full hover:bg-light-gray2 no-underline hover:no-underline">
      {{.PullRequest.GetBase.GetRepo.GetFullName}}: {{.PullRequest.GetBase.GetRef}}
    </a>
    <h1 class="text-xl font-normal tracking-tight text-center">
      <a href="{{.PullRequest.GetHTMLURL}}" title="View the pull request on GitHub" class="text-blue3 hover:text-blue4 no-underline">
        #{{.PullRequest.GetNumber}}</a>:
      {{.PullRequest.GetTitle}}
    </h1>
    <span class="text-xs text-dark-gray3 truncate max-w-full">
      {{.User}}
    </span>
  </header>
  {{if .Error}}
    <div class="status-banner error">
      <h2 class="mb-1 text-lg font-bold">Error</h2>
      <p>{{.Error}}</p>
      {{if .IsTemporaryError}}
          <p class="status-temporary">This error may be temporary. Wait 30 seconds and refresh this page to retry.</p>
      {{end}}
    </div>
  {{else}}
    {{ $s := (or (and .Result.Error "error") (.Result.Status | print)) }}
    <div class="status-banner {{$s}} flex flex-wrap items-center justify-between">
      <div>
        <h2 class="mb-1 text-lg font-bold">Status: {{$s | titlecase}}</h2>
        <p>{{or .Result.Error .Result.StatusDescription}}</p>
      </div>
      <div class="p-2 rounded-md bg-white text-dark-gray1 text-sm text-shadow-none">
        <div class="toggle">
            <input id="filter-toggle" type="checkbox" autocomplete="off" checked/>
            <label for="filter-toggle">Hide skipped rules</label>
        </div>
      </div>
    </div>
    <div class="pl-8 overflow-auto flex-grow">
      <ul class="tree px-4 pb-4" data-hide-status="skipped">
        {{template "results" (args $ .Result)}}
      </ul>
    </div>
  {{end}}
{{end}}

{{define "results"}}
{{ $root := index . 0 }}
{{ $result := index . 1}}
{{ $children := $result.Children | sortByStatus }}
{{range $i, $c := $children}}{{template "result" (args $root $c (nextStatus $i $children))}}{{end}}
{{end}}

{{define "result"}}
{{ $root := index . 0}}
{{ $nextStatus := index . 2}}
{{with index . 1}}
{{ $s := (or (and .Error "error") (.Status | print)) }}
{{ $showReviewers := (and $root.ExpandRequiredReviewers (eq $s "pending")) }}
<li class="node" data-status="{{$s}}" {{if not (eq $s $nextStatus)}}data-next-status="{{$nextStatus}}"{{end}}>
  <div class="bg-white p-2 shadow-sm max-w-lg status-stripe {{$s}}">
    {{template "result-details" .}}
    {{if (or (.PredicateResults) (hasActors .Requires) (hasActorsPermissions .Requires) (gt (len .Requires.Conditions) 0))}}
    <details
      class="bg-light-gray5 p-2 mt-2 text-sm"
      {{if $showReviewers}}
      hx-get="{{$root.BasePath}}/details/{{$root.PullRequest.GetBase.GetRepo.GetFullName}}/{{$root.PullRequest.GetNumber}}/reviewers?rule={{.Name | urlencode}}"
      hx-trigger="toggle once"
      hx-target="find .reviewers"
      {{end}}
    >
      <summary class="text-dark-gray3 font-semibold">Details</summary>
      <div class="border-t border-light-gray3 mt-2 overflow-x-auto whitespace-nowrap">
        {{if .PredicateResults}}
          <div class="pt-2">
            {{template "result-predicates-details" .}}
          </div>
        {{end}}
        {{if ne $s "skipped"}}{{/* only show approval details for active rules */}}
          {{- $hasConditions := gt (len .Requires.Conditions) 0 -}}
          {{- $hasActors := gt .Requires.Count 0 -}}
          {{if $hasConditions }}
            <div class="pt-2">
            {{template "result-conditions-details" .}}
            </div>
          {{end}}
          {{if $hasActors }}
            <div class="pt-2">
            {{template "result-approver-details" .}}
            </div>
            <div class="pt-2">
            {{template "result-methods-details" .}}
            </div>
            {{if $showReviewers}}
            <div class="pt-2">
              <h4 class="font-bold text-sm mb-1">Required Reviewers</h4>
              <p class="italic text-xs mb-2">Approval from {{.Requires.Count}} of these users will satisfy this rule</p>
              <div class="reviewers">{{template "spinner"}}</div>
            </div>
            {{end}}
          {{end}}
          {{if and (not $hasActors) (not $hasConditions)}}
            <div class="pt-2">
              <b class="font-bold text-sm">This rule is automatically approved and requires no reviews</b>
            </div>
          {{end}}
        {{end}}
      </div>
    </details>
    {{end}}
  </div>
  {{if .Children}}
  <ul class="tree">
    {{template "results" (args $root .)}}
  </ul>
  {{end}}
</li>
{{end}}
{{end}}

{{define "result-details"}}
  {{ $s := (or (and .Error "error") (.Status | print)) }}
  <p class="mb-2 flex items-center">
    <b class="font-bold">{{.Name}}</b>
    <span class="flex-none status-badge {{$s}}">{{$s | titlecase}}</span>
  </p>
  {{if (and .Description (ne $s "skipped"))}}
  <p class="mb-2 text-dark-gray3 text-sm">{{.Description}}</p>
  {{end}}
  <p class="text-dark-gray3 text-sm">{{or .Error .StatusDescription}}</p>
{{end}}

{{define "result-predicates-details"}}
  {{ $s := (or (and .Error "error") (.Status | print)) }}
  {{if eq $s "skipped"}}
    <b class="font-bold">This rule is skipped because</b>
  {{else}}
    <b class="font-bold">This rule is selected because</b>
  {{end}}
  {{template "result-predicates-info" .}}
{{end}}

{{define "result-predicates-info"}}
  {{ $s := (or (and .Error "error") (.Status | print)) }}
  <ul class="list-decimal list-outside pl-4 my-2">
  {{range .PredicateResults}}
    <li>
      {{if .Values}}
        The {{.ValuePhrase}}:
        <ul class="list-disc list-outside pl-6 py-2">
          {{range .Values}}<li class="font-mono text-sm-mono">{{.}}</li>{{end}}
        </ul>
        {{if eq $s "skipped"}}do not {{end}}{{.ConditionPhrase}}
        {{if .ConditionsMap}}
        <dl class="pt-2 pl-4">
        {{range $k, $v := .ConditionsMap}}
          {{if $v}}
          <dt>{{$k}}</dt>
          <dd>
              <ul class="list-disc list-outside pl-6 py-2">{{range $v}}<li class="font-mono text-sm-mono">{{.}}</li>{{end}}</ul>
          </dd>
          {{end}}
        {{end}}
        </dl>
        {{else if .ConditionValues}}
          <ul class="list-disc list-outside pl-6 py-2">{{range .ConditionValues}}<li class="font-mono text-sm-mono">{{.}}</li>{{end}}</ul>
        {{end}}
      {{else}}
        There are no {{.ValuePhrase}}
      {{end}}
    </li>
  {{end}}
  </ul>
{{end}}

{{define "result-methods-details"}}
  <b class="font-bold text-sm">Approvals may use any of these methods:</b>
  <dl class="my-2">
  {{range $k, $v := getMethods .}}
    <dt>{{$k}}:</dt>
    <dd>
      <ul class="list-disc list-outside pl-6 py-2">{{range $v}}<li class="font-mono text-sm-mono">{{.}}</li>{{end}}</ul>
    </dd>
  {{end}}
  </dl>
{{end}}

{{define "result-approver-details"}}
  {{$hasActors := hasActors .Requires}}
  {{$hasPerms := hasActorsPermissions .Requires}}
  {{if or $hasActors $hasPerms}}
    <b class="font-bold text-sm">{{template "result-reviews-count" .Requires}} from:</b>
    <dl class="my-2">
    {{if $hasActors}}
    {{range $k, $v := getActors .}}
      <dt>{{$k}}:</dt>
      <dd>
        <ul class="list-disc list-outside pl-6 py-2">{{range $v}}<li class="font-mono text-sm-mono"><a href={{.Link}}>{{.Name}}</a></li>{{end}}</ul>
      </dd>
    {{end}}
    {{end}}
    {{if $hasPerms}}
      <dt>Users with the permissions:</dt>
      <dd>
        <ul class="list-disc list-outside pl-6 py-2">{{range getPermissions .}}<li class="font-mono text-sm-mono">{{.}}</li>{{end}}</ul>
      </dd>
    {{end}}
    </dl>
  {{else}}
    <b class="font-bold text-sm">{{template "result-reviews-count" .Requires}}</b>
  {{end}}
{{end}}

{{define "result-reviews-count"}}This rule requires at least {{.Count}} approval{{if gt .Count 1}}s{{end}}{{end}}

{{define "result-conditions-details"}}
  {{/* TODO(bkeyes): this is a placeholder until I can refactor predicate rendering */}}
  <b class="font-bold text-sm">This rule requires that {{len .Requires.Conditions}} condition{{if gt (len .Requires.Conditions) 1}}s are{{else}} is{{end}} met</b>
{{end}}

{{define "spinner"}}
<div class="spinner w-6 my-2" aria-label="Loading..." aria-valuemax="100" aria-valuemin="0" aria-valuenow="0" role="progressbar">
  <div class="animate-spin">
    <svg class="w-full" stroke-width="8.00" viewBox="1.00 1.00 98.00 98.00">
      <path class="spinner-track" d="M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90"></path>
      <path class="spinner-head" d="M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90" pathLength="280" stroke-dasharray="280 280" stroke-dashoffset="210"></path>
    </svg>
  </div>
</div>
{{end}}
